[Config dummyTests]
network = tsnfivegcomm.simulations.globecom.Scenario_Two.CBS.TC5.Scenario222

sim-time-limit = 1200s


# Timesynchronisation
*.*.hasTimeSynchronization = false


*.*.eth[*].bitrate = 100Mbps

# routing
**.configuratortwo.netmaskRoutes = ""
**.configuratortwo.addSubnetRoutes = false
**.configuratortwo.addDefaultRoutes = false
#**.configurator.config = xmldoc("complex.xml")


*.configuratortwo.config = xmldoc("inputConfig/demo.xml") 
*.globalData.config = xmldoc("inputConfig/DsttIpMacConfigScenario1.xml")



**.tsnSwitch1*.bridging.typename = "MacRelayUnit"
# Interface
**.fcsMode = "computed"
**.crcMode = "computed"
*.*.ethernet.typename = "EthernetLayer"
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.eth1.typename = "LayeredEthernetInterface"
*.*.eth1.bitrate = 100Mbps
#MacTables and schedule
**.dsttUe.macTableModule = xmldoc("inputConfig/demo.xml")
# Connect each UE to the gNB
*.numUe = ${numUEs=1}
**.numBands = 50
**.ue.macCellId = 1
**.ue.masterId = 1
*.ue.nrMacCellId = 1
*.ue.nrMasterId = 1


**.ueTxPower = 26
**.eNodeBTxPower = 40
**.targetBler = 0.01 
**.blerShift = 5   


**.transportVehicle.macCellId = 1
**.transportVehicle.masterId = 1
**.transportVehicle.nrMacCellId = 1
**.transportVehicle.nrMasterId = 1


#Visualisation
*.tsnClock.clock.displayStringTextFormat = "time:%T"
*.tsnDevice*.clock.displayStringTextFormat = "diff:%d"
*.tsnSwitch.clock.displayStringTextFormat = "diff:%d"
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
*.visualizer.infoVisualizer.displayInfos = true
*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.dataLinkVisualizer[0].activityLevel = "protocol"
*.ipvisualizer.*.interfaceTableVisualizer.displayInterfaceTables = true
*.interfaceTable.displayAddresses = True

*.tsnClock1.clock.displayStringTextFormat = "time:%T"

*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true
[Config UDPDL]
extends = dummyTests
**.mac.schedulingDisciplineDl = "DQOS"
# Component carrier
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = 50
*.carrierAggregation.componentCarrier[0].numerologyIndex = 4
*.carrierAggregation.componentCarrier[0].carrierFrequency = 5.9GHz

*.gnb.cellularNic.channelModel[0].numerologyIndex = 4
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.gnb.cellularNic.channelModel[0].scenario = "URBAN_MACROCELL"
*.dsttUe.macForwardingTableConfigurator.typename = ""


*.dsttUe.macTable.forwardingTable = [{address: "tsnDevice3", interface: "ethgate0"}]
*.tsnSwitch1.macForwardingTableConfigurator.typename = ""
*.tsnSwitch1.macTable.forwardingTable = [{address: "tsnDevice3", interface: "eth1"}]
*.tsnSwitch.macForwardingTableConfigurator.typename = ""
*.tsnSwitch.macTable.forwardingTable = [{address: "tsnDevice1", interface: "eth0"},
										{address: "tsnDevice2", interface: "eth1"},
										{address: "nwtt", interface: "eth2"}]


*.tsnDevice1.numApps = 3
*.tsnDevice1.app[*].typename = "UdpSourceApp"
*.tsnDevice1.app[0].display-name = "network control"
*.tsnDevice1.app[1].display-name = "video" 
*.tsnDevice1.app[2].display-name = "best effort"

*.tsnDevice1.app[*].io.destAddress = "transportVehicle"
*.tsnDevice1.app[0].io.destPort = 1000
*.tsnDevice1.app[1].io.destPort = 1001
*.tsnDevice1.app[2].io.destPort = 1002

*.tsnDevice1.app[0].source.packetLength = 485B  # 55428.57 bits per second 
*.tsnDevice1.app[1].source.packetLength = 1303B  # 148914.2857 bits per second /
*.tsnDevice1.app[2].source.packetLength = 1330B  # 19345.45

*.tsnDevice1.app[0].source.productionInterval = 70ms
*.tsnDevice1.app[1].source.productionInterval = 70ms
*.tsnDevice1.app[2].source.productionInterval = exponential(550ms)

# server applications
*.transportVehicle.numApps = 3
*.transportVehicle.app[*].typename = "UdpSinkApp"
*.transportVehicle.app[0].display-name = "network control" #"best effort"
*.transportVehicle.app[1].display-name = "video"
*.transportVehicle.app[2].display-name = "best effort" 

*.transportVehicle.app[0].io.localPort = 1000
*.transportVehicle.app[1].io.localPort = 1001
*.transportVehicle.app[2].io.localPort = 1002

# enable outgoing streams
*.tsnDevice1.hasOutgoingStreams = true

# client stream identification
*.tsnDevice1.bridging.streamIdentifier.identifier.mapping = [{stream: "network control", packetFilter: expr(udp.destPort == 1000)},
                                                         {stream: "video", packetFilter: expr(udp.destPort == 1001)},
														 {stream: "best effort", packetFilter: expr(udp.destPort == 1002)}]

# client stream encoding
*.tsnDevice1.bridging.streamCoder.encoder.mapping = [{stream: "network control", vlan:99, pcp: 7},
                                                 	{stream: "video", vlan:100, pcp: 4},
 													{stream: "best effort", vlan:101, pcp: 0}]

# enable egress traffic shaping
*.tsnSwitch.hasEgressTrafficShaping = true

# disable forwarding IEEE 802.1Q C-Tag
#*.tsnSwitch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

# credit based traffic shaping
*.tsnSwitch.eth[*].macLayer.queue.numTrafficClasses = 3

*.tsnSwitch.eth[*].macLayer.queue.*[0].display-name = "best effort"
*.tsnSwitch.eth[*].macLayer.queue.*[1].display-name = "video"
*.tsnSwitch.eth[*].macLayer.queue.*[2].display-name = "network control"

*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].typename = "Ieee8021qCreditBasedShaper"
*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 75Mbps # Channel data rate


# credit based traffic shaping
*.nwtt.eth[*].macLayer.queue.numTrafficClasses = 3

*.nwtt.eth[*].macLayer.queue.*[0].display-name = "best effort" 
*.nwtt.eth[*].macLayer.queue.*[1].display-name = "video"
*.nwtt.eth[*].macLayer.queue.*[2].display-name = "network control"


#Enable 802.1q
*.*.ieee8021q.typename = "Ieee8021qProtocol"
*.tsnSwitch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

[Config UDPUL]
extends = dummyTests
*.tsnEnabled = true
*.nwtt.bridging.typename = "TsnRelayUnit"
# Component carrier
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands = 50
*.carrierAggregation.componentCarrier[0].numerologyIndex = 4
*.carrierAggregation.componentCarrier[0].carrierFrequency = 5.9GHz

*.gnb.cellularNic.channelModel[0].numerologyIndex = 4
*.ue.cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.gnb.cellularNic.channelModel[0].scenario = "URBAN_MACROCELL"
*.dsttUe.macForwardingTableConfigurator.typename = ""
*.dsttUe.macTable.forwardingTable = [{address: "tsnDevice3", interface: "ethgate0"}]
*.tsnSwitch1.macForwardingTableConfigurator.typename = ""
*.tsnSwitch1.macTable.forwardingTable = [{address: "tsnDevice3", interface: "eth1"}]
*.tsnSwitch0.macForwardingTableConfigurator.typename = ""
*.tsnSwitch0.macTable.forwardingTable = [{address: "tsnDevice1", interface: "eth1"},
										{address: "tsnDevice2", interface: "eth2"},
										 {address: "tsnClock", interface: "eth0"},
										{address: "nwtt", interface: "eth3"}]

*.tsnDevice3.interfaceTable = [{address:"dsttUe", interface:"eth0"}]
**.dstt.macCellId = 1
**.dstt.masterId = 1
*.dstt.nrMacCellId = 1
*.dstt.nrMasterId = 1

**.dsttwap.macCellId = 1
**.dsttwap.masterId = 1
*.dsttwap.nrMacCellId = 1
*.dsttwap.nrMasterId = 1


**.dsttSimple.macCellId = 1
**.dsttSimple.masterId = 1
*.dsttSimple.nrMacCellId = 1
*.dsttSimple.nrMasterId = 1

**.dsttUe.macCellId = 1
**.dsttUe.masterId = 1
*.dsttUe.nrMacCellId = 1
*.dsttUe.nrMasterId = 1

**.cellularModem.macCellId = 1
**.cellularModem.masterId = 1
*.cellularModem.nrMacCellId = 1
*.cellularModem.nrMasterId = 1

**.NewNrUe.macCellId = 1
**.NewNrUe.masterId = 1
*.NewNrUe.nrMacCellId = 1
*.NewNrUe.nrMasterId = 1

**.ueTT.macCellId = 1
**.ueTT.masterId = 1
*.ueTT.nrMacCellId = 1
*.ueTT.nrMasterId = 1

*.transportVehicle.numApps = 3
*.transportVehicle.app[*].typename = "UdpSourceApp"
*.transportVehicle.app[0].display-name = "best effort"
*.transportVehicle.app[1].display-name = "video"
*.transportVehicle.app[*].io.destAddress = "tsnDevice1"
*.transportVehicle.app[0].io.destPort = 1000
*.transportVehicle.app[1].io.destPort = 1001
*.transportVehicle.app[*].source.packetLength = 1000B
*.transportVehicle.app[0].source.productionInterval = exponential(0.1s)
*.transportVehicle.app[1].source.productionInterval = exponential(0.1s)


# server applications
*.tsnDevice1.numApps = 3
*.tsnDevice1.app[*].typename = "UdpSinkApp"
*.tsnDevice1.app[0].display-name = "network control"
*.tsnDevice1.app[1].display-name = "video"
*.tsnDevice1.app[2].display-name = "best effort"
*.tsnDevice1.app[0].io.localPort = 1000
*.tsnDevice1.app[1].io.localPort = 1001
*.tsnDevice1.app[2].io.localPort = 1002

# enable outgoing streams
*.tsnDevice1.hasOutgoingStreams = true

# client stream identification
*.tsnDevice1.bridging.streamIdentifier.identifier.mapping = [{stream: "network control", packetFilter: expr(udp.destPort == 1000)},
                                                         {stream: "video", packetFilter: expr(udp.destPort == 1001)},
														 {stream: "best effort", packetFilter: expr(udp.destPort == 1002)}]

# client stream encoding
*.tsnDevice1.bridging.streamCoder.encoder.mapping = [{stream: "network control", vlan:99, pcp: 7},
                                                 	{stream: "video", vlan:100, pcp: 4},
 													{stream: "best effort", vlan:101, pcp: 0}]

# enable egress traffic shaping
*.tsnSwitch.hasEgressTrafficShaping = true

# disable forwarding IEEE 802.1Q C-Tag
#*.tsnSwitch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

# credit based traffic shaping
*.tsnSwitch.eth[*].macLayer.queue.numTrafficClasses = 3
*.tsnSwitch.eth[*].macLayer.queue.*[0].display-name = "best effort"
*.tsnSwitch.eth[*].macLayer.queue.*[1].display-name = "video"
*.tsnSwitch.eth[*].macLayer.queue.*[2].display-name = "network control"
*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].typename = "Ieee8021qCreditBasedShaper"
*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 75Mbps # Channel data rate
#*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 21.34Mbps # Channel data rate

# credit based traffic shaping
*.nwtt.eth[*].macLayer.queue.numTrafficClasses = 3
*.nwtt.eth[*].macLayer.queue.*[0].display-name = "best effort"
*.nwtt.eth[*].macLayer.queue.*[1].display-name = "video"
*.nwtt.eth[*].macLayer.queue.*[2].display-name = "network control"
*.nwtt.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].typename = "Ieee8021qCreditBasedShaper"
*.nwtt.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 75Mbps # Channel data rate
#*.nwtt.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 21.34Mbps # Channel data rate

#Enable 802.1q
*.*.ieee8021q.typename = "Ieee8021qProtocol"

















